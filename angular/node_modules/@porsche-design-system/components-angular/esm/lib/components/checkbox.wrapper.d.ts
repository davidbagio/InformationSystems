import { EventEmitter } from '@angular/core';
import { BaseComponentWithTheme } from '../../utils';
import type { BreakpointCustomizable, CheckboxUpdateEventDetail, CheckboxState, Theme } from '../types';
import * as i0 from "@angular/core";
export declare class PCheckbox extends BaseComponentWithTheme {
    checked?: boolean;
    compact?: boolean;
    disabled?: boolean;
    form?: string;
    hideLabel?: BreakpointCustomizable<boolean>;
    indeterminate?: boolean;
    label?: string;
    loading?: boolean;
    message?: string;
    name?: string;
    required?: boolean;
    state?: CheckboxState;
    theme?: Theme;
    value?: string;
    blur: EventEmitter<CustomEvent<Event>>;
    update: EventEmitter<CustomEvent<CheckboxUpdateEventDetail>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<PCheckbox, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PCheckbox, "p-checkbox,[p-checkbox]", never, { "checked": { "alias": "checked"; "required": false; }; "compact": { "alias": "compact"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "form": { "alias": "form"; "required": false; }; "hideLabel": { "alias": "hideLabel"; "required": false; }; "indeterminate": { "alias": "indeterminate"; "required": false; }; "label": { "alias": "label"; "required": false; }; "loading": { "alias": "loading"; "required": false; }; "message": { "alias": "message"; "required": false; }; "name": { "alias": "name"; "required": false; }; "required": { "alias": "required"; "required": false; }; "state": { "alias": "state"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; "value": { "alias": "value"; "required": false; }; }, { "blur": "blur"; "update": "update"; }, never, ["*"], false, never>;
}
