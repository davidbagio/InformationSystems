import { EventEmitter } from '@angular/core';
import { BaseComponentWithTheme } from '../../utils';
import type { TextareaAutoComplete, BreakpointCustomizable, TextareaResize, TextareaState, Theme, TextareaWrap } from '../types';
import * as i0 from "@angular/core";
export declare class PTextarea extends BaseComponentWithTheme {
    autoComplete?: TextareaAutoComplete;
    description?: string;
    disabled?: boolean;
    form?: string;
    hideLabel?: BreakpointCustomizable<boolean>;
    label?: string;
    maxLength?: number;
    message?: string;
    minLength?: number;
    name: string;
    placeholder?: string;
    readOnly?: boolean;
    required?: boolean;
    resize?: TextareaResize;
    rows?: number;
    showCounter?: boolean;
    spellCheck?: boolean;
    state?: TextareaState;
    theme?: Theme;
    value?: string;
    wrap?: TextareaWrap;
    blur: EventEmitter<CustomEvent<Event>>;
    change: EventEmitter<CustomEvent<Event>>;
    input: EventEmitter<CustomEvent<InputEvent>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<PTextarea, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PTextarea, "p-textarea,[p-textarea]", never, { "autoComplete": { "alias": "autoComplete"; "required": false; }; "description": { "alias": "description"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "form": { "alias": "form"; "required": false; }; "hideLabel": { "alias": "hideLabel"; "required": false; }; "label": { "alias": "label"; "required": false; }; "maxLength": { "alias": "maxLength"; "required": false; }; "message": { "alias": "message"; "required": false; }; "minLength": { "alias": "minLength"; "required": false; }; "name": { "alias": "name"; "required": false; }; "placeholder": { "alias": "placeholder"; "required": false; }; "readOnly": { "alias": "readOnly"; "required": false; }; "required": { "alias": "required"; "required": false; }; "resize": { "alias": "resize"; "required": false; }; "rows": { "alias": "rows"; "required": false; }; "showCounter": { "alias": "showCounter"; "required": false; }; "spellCheck": { "alias": "spellCheck"; "required": false; }; "state": { "alias": "state"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; "value": { "alias": "value"; "required": false; }; "wrap": { "alias": "wrap"; "required": false; }; }, { "blur": "blur"; "change": "change"; "input": "input"; }, never, ["*"], false, never>;
}
