import { EventEmitter } from '@angular/core';
import { BaseComponentWithTheme } from '../../utils';
import type { TextFieldWrapperActionIcon, BreakpointCustomizable, TextFieldWrapperState, Theme, TextFieldWrapperUnitPosition } from '../types';
import * as i0 from "@angular/core";
export declare class PTextFieldWrapper extends BaseComponentWithTheme {
    actionIcon?: TextFieldWrapperActionIcon;
    actionLoading?: boolean;
    description?: string;
    hideLabel?: BreakpointCustomizable<boolean>;
    label?: string;
    message?: string;
    /** @deprecated */
    showCharacterCount?: boolean;
    showCounter?: boolean;
    showPasswordToggle?: boolean;
    state?: TextFieldWrapperState;
    submitButton?: boolean;
    theme?: Theme;
    unit?: string;
    unitPosition?: TextFieldWrapperUnitPosition;
    action: EventEmitter<CustomEvent<void>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<PTextFieldWrapper, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PTextFieldWrapper, "p-text-field-wrapper,[p-text-field-wrapper]", never, { "actionIcon": { "alias": "actionIcon"; "required": false; }; "actionLoading": { "alias": "actionLoading"; "required": false; }; "description": { "alias": "description"; "required": false; }; "hideLabel": { "alias": "hideLabel"; "required": false; }; "label": { "alias": "label"; "required": false; }; "message": { "alias": "message"; "required": false; }; "showCharacterCount": { "alias": "showCharacterCount"; "required": false; }; "showCounter": { "alias": "showCounter"; "required": false; }; "showPasswordToggle": { "alias": "showPasswordToggle"; "required": false; }; "state": { "alias": "state"; "required": false; }; "submitButton": { "alias": "submitButton"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; "unit": { "alias": "unit"; "required": false; }; "unitPosition": { "alias": "unitPosition"; "required": false; }; }, { "action": "action"; }, never, ["*"], false, never>;
}
