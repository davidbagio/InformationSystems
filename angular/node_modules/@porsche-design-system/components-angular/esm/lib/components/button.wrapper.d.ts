import { BaseComponentWithTheme } from '../../utils';
import type { SelectedAriaAttributes, ButtonAriaAttribute, BreakpointCustomizable, ButtonIcon, Theme, ButtonType, ButtonVariant } from '../types';
import * as i0 from "@angular/core";
export declare class PButton extends BaseComponentWithTheme {
    aria?: SelectedAriaAttributes<ButtonAriaAttribute>;
    compact?: BreakpointCustomizable<boolean>;
    disabled?: boolean;
    form?: string;
    hideLabel?: BreakpointCustomizable<boolean>;
    icon?: ButtonIcon;
    iconSource?: string;
    loading?: boolean;
    name?: string;
    theme?: Theme;
    type?: ButtonType;
    value?: string;
    variant?: ButtonVariant;
    static ɵfac: i0.ɵɵFactoryDeclaration<PButton, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PButton, "p-button,[p-button]", never, { "aria": { "alias": "aria"; "required": false; }; "compact": { "alias": "compact"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "form": { "alias": "form"; "required": false; }; "hideLabel": { "alias": "hideLabel"; "required": false; }; "icon": { "alias": "icon"; "required": false; }; "iconSource": { "alias": "iconSource"; "required": false; }; "loading": { "alias": "loading"; "required": false; }; "name": { "alias": "name"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; "type": { "alias": "type"; "required": false; }; "value": { "alias": "value"; "required": false; }; "variant": { "alias": "variant"; "required": false; }; }, {}, never, ["*"], false, never>;
}
